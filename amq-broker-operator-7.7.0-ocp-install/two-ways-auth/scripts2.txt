## Install AMQ Broker using Operator

oc delete -f deploy/crs/broker_activemqartemis_cr.yaml.
oc delete -f deploy/operator.yaml
oc delete -f deploy/crds/broker_activemqartemis_crd.yaml
oc delete -f deploy/crds/broker_activemqartemisaddress_crd.yaml
oc delete -f deploy/crds/broker_activemqartemisscaledown_crd.yaml



  # See https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html-single/deploying_amq_broker_on_openshift/index#deploying-broker-on-ocp-using-operator_broker-ocp

  mkdir -p ~/broker/operator
  mv Downloads/AMQ/amq-broker-operator-7.7.0-ocp-install-examples.zip ~/broker/operator/
  cd ~/broker/operator
  unzip amq-broker-operator-7.7.0-ocp-install-examples.zip
  cd amq-broker-operator-7.7.0-ocp-install-examples/deploy

  # Deploying the Custom Resource Definitions (CRDs) that accompany the AMQ Broker Operator requires cluster administrator privileges for your OpenShift cluster.

  oc login -u system:admin

  # Create a new project
  oc new-project amq-demo

  # Or switch to existing
  oc project amq-demo

  # Prepare for Operator Execution:
  oc create -f deploy/service_account.yaml
  oc create -f deploy/role.yaml
  oc create -f deploy/role_binding.yaml

  # Deploy the main broker CRD:
  oc create -f deploy/crds/broker_activemqartemis_crd.yaml

  # Deploy the address CRD:
  oc create -f deploy/crds/broker_activemqartemisaddress_crd.yaml

  # Deploy the scaledown controller CRD:
  oc create -f deploy/crds/broker_activemqartemisscaledown_crd.yaml

  # Login to registry and pass the credential to oc
  # https://access.redhat.com/RegistryAuthentication
  # Create a secret from the pull-secret file downloaded
  oc create secret generic pull-secret-from-redhat --from-file=.dockercfg=pull-secret --type=kubernetes.io/dockercfg
  oc secrets link --for=pull default pull-secret-from-redhat
  oc secrets link --for=pull deployer pull-secret-from-redhat
  oc secrets link --for=pull builder pull-secret-from-redhat

  oc create -f deploy/operator.yaml

## Create the certificate (Or use the provided ones, skipping down oc create secret generic endpoint-service-tls-secret...)

# 1. Generate a self-signed certificate for the broker key store
  $ keytool -genkey -keyalg RSA -alias broker -keystore certs/broker.ks -storepass 123456 -validity 9999 -dname "CN=endpoint-service-mqtts-*-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com, OU=EMEA Partner Development, O=Red Hat, L=Milan, ST=Milan, C=IT" -ext "SAN=DNS:endpoint-service-mqtts-0-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com,DNS:endpoint-service-mqtts-1-svc-rte-qiotcovid19v2.apps.cluster-fcd8.fcd8.example.opentlc.com"

# 2. Export the certificate from the broker key store, so that it can be shared with clients. Export the certificate in the Base64-encoded .pem format
  $ keytool -export -alias broker -keystore certs/broker.ks -file certs/broker_cert.pem -storepass 123456

# 3. On the client, create a client trust store that imports the broker certificate
  $ keytool -import -alias broker -keystore certs/client.ts -file certs/broker_cert.pem -storepass 123456 -trustcacerts

# 4. On the client, generate a self-signed certificate for the client key store
  $ keytool -genkey -alias broker -keyalg RSA -keystore certs/client.ks  -storepass 123456 -validity 9999 -dname "CN=qiot-station, OU=EMEA Partner Development, O=Red Hat, L=Milan, ST=Milan, C=IT"

# 5. On the client, export the certificate from the client key store, so that it can be shared with the broker. Export the certificate in the Base64-encoded .pem format
  $ keytool -export -alias broker -keystore certs/client.ks -file certs/client_cert.pem -storepass 123456

# 6. Create a broker trust store that imports the client certificate
  $ keytool -import -alias broker -keystore certs/broker.ts -file certs/client_cert.pem -storepass 123456 -trustcacerts


  oc create secret generic endpoint-service-tls-secret \
  --from-file=broker.ks=certs/broker.ks \
  --from-file=client.ts=certs/client.ks \
  --from-literal=keyStorePassword=123456 \
  --from-literal=trustStorePassword=123456
  oc secrets link sa/amq-broker-operator secret/endpoint-service-tls-secret

## Install the AMQ Broker using the Operator just installed

oc create -f deploy/crs/broker_activemqartemis_cr.yaml

curl https://ex-aao-mqtt-0-svc-rte-amq-demo.apps.cluster-emeaiot-d864.emeaiot-d864.example.opentlc.com/

